{"version":3,"file":"BasicLocalProtocol.js","sourceRoot":"","sources":["../../src/protocols/BasicLocalProtocol.ts"],"names":[],"mappings":";;;;AAAA,yCAAgD;AAChD,6CAA6D;AAE7D,iDAA4C;AAC5C,yDAAoD;AAQpD,IAAa,aAAa,GAA1B,MAAa,aAAa;IACxB,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAG,CAAC;IAE3C,SAAS,CAAY,OAAwB;;YACjD,aAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACjB,OAAO,KAAK,CAAC;aACd;;gBAAM,OAAO,IAAI,CAAC;QACrB,CAAC;KAAA;IAED,UAAU,CAAC,QAAkB;QAC3B,gEAAgE;IAClE,CAAC;CACF,CAAA;AAVC;IAAiB,mBAAA,gBAAO,EAAE,CAAA;;;;8CAKzB;AARU,aAAa;IALzB,mBAAQ,CAAC;QACR,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,6BAAa;QAC1B,QAAQ,EAAE,EAAE;KACb,CAAC;6CAEkC,yBAAW;GADlC,aAAa,CAazB;AAbY,sCAAa","sourcesContent":["import {Req, $log, Session} from \"@tsed/common\";\r\nimport {OnInstall, OnVerify, Protocol} from \"@tsed/passport\";\r\nimport {Strategy, session} from \"passport\";\r\nimport {BasicStrategy} from \"passport-http\";\r\nimport {UserService} from \"../services/UserService\";\r\nimport {User} from \"../models/User\";\r\n\r\n@Protocol({\r\n  name: \"basic\",\r\n  useStrategy: BasicStrategy,\r\n  settings: {},\r\n})\r\nexport class BasicProtocol implements OnVerify, OnInstall {\r\n  constructor(private usersService: UserService) {}\r\n\r\n  async $onVerify(@Session() session: Express.Session) {\r\n    $log.info(\"here in basic protocol\", session);\r\n    if (!session.user) {\r\n      return false;\r\n    } else return true;\r\n  }\r\n\r\n  $onInstall(strategy: Strategy): void {\r\n    // intercept the strategy instance to adding extra configuration\r\n  }\r\n}\r\n"]}