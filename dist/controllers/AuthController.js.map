{"version":3,"file":"AuthController.js","sourceRoot":"","sources":["../../src/controllers/AuthController.ts"],"names":[],"mappings":";;;;AAAA,yCAA8F;AAC9F,yDAAoD;AACpD,6CAAuD;AACvD,yCAAoC;AACpC,oDAAoD;AAEpD,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,YAAwC,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAI9D,KAAK,CAAc,GAAS;;YAChC,OAAO,GAAG,CAAC;QACb,CAAC;KAAA;IAID,MAAM,CAAc,GAAS;QAC3B,IAAI;YACF,kBAAkB;YAClB,OAAO,GAAG,CAAC;SACZ;QAAC,OAAO,KAAK,EAAE;YACd,aAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACnB;IACH,CAAC;IAGK,UAAU,CAAiB,GAAS;;YACxC,IAAI;gBACF,uCAAuC;gBACvC,0BAA0B;gBAC1B,eAAe;gBACf,wDAAwD;gBACxD,aAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;gBAC1B,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAClB,OAAO,GAAG,CAAC;aACZ;YAAC,OAAO,KAAK,EAAE;gBACd,aAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAClB,OAAO,IAAI,CAAC;aACb;QACH,CAAC;KAAA;IAEK,OAAO,CAAmB,EAAU;;YACxC,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAEjD,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,aAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAClB,OAAO,IAAI,CAAC;aACb;QACH,CAAC;KAAA;IAED,MAAM,CAAQ,GAAQ;QACpB,IAAI;YACF,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC;YACrB,aAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;SACtC;QAAC,OAAO,KAAK,EAAE;YACd,aAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACnB;IACH,CAAC;CACF,CAAA;AAnDC;IAFC,aAAI,CAAC,QAAQ,CAAC;IACd,uBAAY,CAAC,OAAO,CAAC;IACT,mBAAA,YAAG,CAAC,MAAM,CAAC,CAAA;;6CAAM,WAAI;;2CAEjC;AAID;IAFC,aAAI,CAAC,SAAS,CAAC;IACf,uBAAY,CAAC,QAAQ,CAAC;IACf,mBAAA,YAAG,CAAC,MAAM,CAAC,CAAA;;6CAAM,WAAI;;4CAO5B;AAGD;IAFC,YAAG,CAAC,UAAU,CAAC;IACf,oBAAS,CAAC,KAAK,CAAC;IACC,mBAAA,YAAG,CAAC,SAAS,CAAC,CAAA;;6CAAM,WAAI;;gDAazC;AAED;IADC,YAAG,CAAC,WAAW,CAAC;IACF,mBAAA,mBAAU,CAAC,IAAI,CAAC,CAAA;;6CAAK,MAAM;;6CASzC;AAED;IADC,YAAG,CAAC,SAAS,CAAC;IACP,mBAAA,YAAG,EAAE,CAAA;;;;4CAQZ;AAvDU,cAAc;IAD1B,mBAAU,CAAC,EAAE,CAAC;IAEA,mBAAA,eAAM,CAAC,yBAAW,CAAC,CAAA;6CAAqB,yBAAW;GADrD,cAAc,CAwD1B;AAxDY,wCAAc","sourcesContent":["import {Controller, Inject, Post, Req, $log, Get, BodyParams, PathParams} from \"@tsed/common\";\r\nimport {UserService} from \"../services/UserService\";\r\nimport {Authenticate, Authorize} from \"@tsed/passport\";\r\nimport {User} from \"../models/User\";\r\n// export const tempId = \"5f549bc077ff7458309f1b5c\";\r\n@Controller(\"\")\r\nexport class UserController {\r\n  constructor(@Inject(UserService) public userService: UserService) {}\r\n\r\n  @Post(\"/login\")\r\n  @Authenticate(\"login\")\r\n  async login(@Req(\"user\") req: User) {\r\n    return req;\r\n  }\r\n\r\n  @Post(\"/signup\")\r\n  @Authenticate(\"signup\")\r\n  signUp(@Req(\"user\") req: User) {\r\n    try {\r\n      // $log.info(req);\r\n      return req;\r\n    } catch (error) {\r\n      $log.error(error);\r\n    }\r\n  }\r\n  @Get(\"/session\")\r\n  @Authorize(\"jwt\")\r\n  async getSession(@Req(\"account\") req: User) {\r\n    try {\r\n      // const user = req.user || {id: null};\r\n      // $log.info(req.session);\r\n      // return user;\r\n      // const user = await this.userService.findById(tempId);\r\n      $log.info(\"session\", req);\r\n      req.password = \"\";\r\n      return req;\r\n    } catch (error) {\r\n      $log.error(error);\r\n      return null;\r\n    }\r\n  }\r\n  @Get(\"/user/:id\")\r\n  async getUser(@PathParams(\"id\") id: String) {\r\n    try {\r\n      const user = await this.userService.findById(id);\r\n\r\n      return user;\r\n    } catch (error) {\r\n      $log.error(error);\r\n      return null;\r\n    }\r\n  }\r\n  @Get(\"/logout\")\r\n  logout(@Req() req: Req) {\r\n    try {\r\n      req.logout();\r\n      req.user = undefined;\r\n      $log.info(\"logged out\", req.session);\r\n    } catch (error) {\r\n      $log.error(error);\r\n    }\r\n  }\r\n}\r\n"]}