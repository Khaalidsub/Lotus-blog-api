{"version":3,"file":"FileController.js","sourceRoot":"","sources":["../../src/controllers/FileController.ts"],"names":[],"mappings":";;;;AAAA,yCAAwE;AACxE,yDAAkE;AAClE,2BAA+C;AAC/C,uCAAiC;AACjC,+BAA+B;AAE/B,MAAM,MAAM,GAAG,gBAAS,CAAC,WAAG,CAAC,CAAC;AAC9B,oDAAoD;AAEpD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAGrB,GAAG,CAAkB,IAAyB;;YAClD,yCAAyC;YACzC,uBAAuB;YACvB,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACvC,MAAM,QAAQ,GACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;gBACrD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAEzF,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,WAAW,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC;YACxE,MAAM,WAAW,GAAG,iBAAY,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,UAAU,GAAG,SAAS,IAAI,CAAC,YAAY,EAAE,CAAC;YAEhD,MAAM,MAAM,GAAG;gBACb,MAAM,EAAE,aAAa;gBACrB,GAAG,EAAE,UAAU;gBACf,IAAI,EAAE,WAAW;gBACjB,GAAG,EAAE,aAAa;gBAClB,WAAW,EAAE,IAAI,CAAC,QAAQ;aAC3B,CAAC;YACF,MAAM,MAAM,GAAG,MAAM,QAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;YAEjD,6BAA6B;YAE7B,OAAO;gBACL,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE;oBACJ,GAAG,EAAE,MAAM,CAAC,QAAQ;iBACrB;aACF,CAAC;QACJ,CAAC;KAAA;IAEK,MAAM,CAAqB,IAAY;;YAC3C,MAAM,MAAM,GAAG;gBACb,MAAM,EAAE,MAAM;gBACd,GAAG,EAAE,IAAI;aACV,CAAC;YACF,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,QAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;gBAEvD,OAAO,MAAM,CAAC,YAAY,CAAC;aAC5B;YAAC,OAAO,KAAK,EAAE;gBACd,aAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAElB,OAAO,KAAK,CAAC;aACd;YAED,6BAA6B;QAC/B,CAAC;KAAA;CACF,CAAA;AAhDC;IAFC,aAAI,CAAC,SAAS,CAAC;IACf,8BAAa,CAAC,EAAC,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,SAAS,EAAC,CAAC;IACtC,mBAAA,8BAAa,EAAE,CAAA;;;;2CA6BzB;AAED;IADC,eAAM,CAAC,eAAe,CAAC;IACV,mBAAA,mBAAU,CAAC,MAAM,CAAC,CAAA;;;;8CAgB/B;AAlDU,gBAAgB;IAD5B,mBAAU,CAAC,OAAO,CAAC;GACP,gBAAgB,CAmD5B;AAnDY,4CAAgB","sourcesContent":["import {$log, Controller, Delete, PathParams, Post} from \"@tsed/common\";\r\nimport {MulterOptions, MultipartFile} from \"@tsed/multipartfiles\";\r\nimport {rename as ren, readFileSync} from \"fs\";\r\nimport {s3} from \"../config/aws\";\r\nimport {promisify} from \"util\";\r\n\r\nconst rename = promisify(ren);\r\n// const uploadFile = promisify(capella.uploadFile);\r\n@Controller(\"/file\")\r\nexport class UploadController {\r\n  @Post(\"/upload\")\r\n  @MulterOptions({dest: `${process.cwd()}/images`})\r\n  async add(@MultipartFile() file: Express.Multer.File): Promise<any> {\r\n    // $log.info(\"in adding an image\", file);\r\n    // rename(file.path,'')\r\n    const pos = file.path.lastIndexOf(\".\");\r\n    const showFile =\r\n      file.path.substr(0, pos < 0 ? file.path.length : pos) +\r\n      file.originalname.substr(file.originalname.lastIndexOf(\".\"), file.originalname.length);\r\n\r\n    await rename(file.path, `${process.cwd()}/images/${file.filename}.jpg`);\r\n    const fileContent = readFileSync(showFile);\r\n    const fileUpload = `posts/${file.originalname}`;\r\n\r\n    const params = {\r\n      Bucket: \"lotus-blogs\",\r\n      Key: fileUpload,\r\n      Body: fileContent,\r\n      ACL: \"public-read\",\r\n      contentType: file.mimetype,\r\n    };\r\n    const result = await s3.upload(params).promise();\r\n\r\n    // $log.info(\"file\", result);\r\n\r\n    return {\r\n      success: 1,\r\n      file: {\r\n        url: result.Location,\r\n      },\r\n    };\r\n  }\r\n  @Delete(\"/delete/:name\")\r\n  async delete(@PathParams(\"name\") name: string): Promise<any> {\r\n    const params = {\r\n      Bucket: \"blog\",\r\n      Key: name,\r\n    };\r\n    try {\r\n      const result = await s3.deleteObject(params).promise();\r\n\r\n      return result.DeleteMarker;\r\n    } catch (error) {\r\n      $log.error(error);\r\n\r\n      return error;\r\n    }\r\n\r\n    // $log.info(\"file\", result);\r\n  }\r\n}\r\n"]}