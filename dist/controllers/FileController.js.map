{"version":3,"file":"FileController.js","sourceRoot":"","sources":["../../src/controllers/FileController.ts"],"names":[],"mappings":";;;;AAAA,yCAA8C;AAC9C,yDAAkE;AAClE,6CAAyC;AACzC,mCAAmC;AAEnC,MAAM,WAAW,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE,EAAE;IACzC,oBAAoB;IACpB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,uBAAuB,CAAC,EAAE;QACrD,OAAO,EAAE,CAAC,IAAI,KAAK,CAAC,+BAA+B,CAAC,EAAE,KAAK,CAAC,CAAC;KAC9D;IACD,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC;AAEF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAiBrB,GAAG,CAAkB,IAAyB;;YAClD,OAAO;gBACL,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE;oBACJ,GAAG,EAAE,0CAA0C,IAAI,CAAC,QAAQ,EAAE;iBAE/D;aACF,CAAC;QACJ,CAAC;KAAA;CACF,CAAA;AATC;IAhBC,aAAI,CAAC,SAAS,CAAC;IACf,oBAAS,CAAC,KAAK,CAAC;IAChB,8BAAa,CAAC;QACb,OAAO,EAAE,oBAAW,CAAC;YACnB,WAAW,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;gBAC7B,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,SAAS,CAAC,CAAC;YAC9C,CAAC;YACD,QAAQ,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;gBAC1B,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;YAChC,CAAC;SACF,CAAC;QACF,UAAU,EAAE,WAAW;QACvB,MAAM,EAAE;YACN,SAAS,EAAE,KAAK,GAAG,IAAI;SACxB;KACF,CAAC;IACS,mBAAA,8BAAa,EAAE,CAAA;;;;2CAQzB;AAzBU,gBAAgB;IAD5B,mBAAU,CAAC,OAAO,CAAC;GACP,gBAAgB,CA0B5B;AA1BY,4CAAgB","sourcesContent":["import {Controller, Post} from \"@tsed/common\";\r\nimport {MulterOptions, MultipartFile} from \"@tsed/multipartfiles\";\r\nimport {Authorize} from \"@tsed/passport\";\r\nimport {diskStorage} from \"multer\";\r\n\r\nconst imageFilter = function (req, file, cb) {\r\n  // accept image only\r\n  if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n    return cb(new Error(\"Only image files are allowed!\"), false);\r\n  }\r\n  cb(null, true);\r\n};\r\n@Controller(\"/file\")\r\nexport class UploadController {\r\n  @Post(\"/upload\")\r\n  @Authorize(\"jwt\")\r\n  @MulterOptions({\r\n    storage: diskStorage({\r\n      destination: (req, file, cb) => {\r\n        cb(null, process.env.IMAGEDIR || `/images`);\r\n      },\r\n      filename: (req, file, cb) => {\r\n        cb(null, Date.now() + \".jpg\");\r\n      },\r\n    }),\r\n    fileFilter: imageFilter,\r\n    limits: {\r\n      fieldSize: 10000 * 5000,\r\n    },\r\n  })\r\n  async add(@MultipartFile() file: Express.Multer.File): Promise<any> {\r\n    return {\r\n      success: 1,\r\n      file: {\r\n        url: `https://www.lotus-blogs-api.xyz/images/${file.filename}`,\r\n        // url: `http://10.100.25.59:8081/images/${file.filename}`,\r\n      },\r\n    };\r\n  }\r\n}\r\n"]}